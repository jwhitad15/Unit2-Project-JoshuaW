{
  "version": 3,
  "sources": ["browser-external:fs", "browser-external:child_process", "browser-external:path", "browser-external:os", "browser-external:crypto", "../../../../../../../../node_modules/readline-sync/lib/readline-sync.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"child_process\" has been externalized for browser compatibility. Cannot access \"child_process.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*\n * readlineSync\n * https://github.com/anseki/readline-sync\n *\n * Copyright (c) 2019 anseki\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar\n  IS_WIN = process.platform === 'win32',\n\n  ALGORITHM_CIPHER = 'aes-256-cbc',\n  ALGORITHM_HASH = 'sha256',\n  DEFAULT_ERR_MSG = 'The current environment doesn\\'t support interactive reading from TTY.',\n\n  fs = require('fs'),\n  TTY = process.binding('tty_wrap').TTY,\n  childProc = require('child_process'),\n  pathUtil = require('path'),\n\n  defaultOptions = {\n    /* eslint-disable key-spacing */\n    prompt:             '> ',\n    hideEchoBack:       false,\n    mask:               '*',\n    limit:              [],\n    limitMessage:       'Input another, please.$<( [)limit(])>',\n    defaultInput:       '',\n    trueValue:          [],\n    falseValue:         [],\n    caseSensitive:      false,\n    keepWhitespace:     false,\n    encoding:           'utf8',\n    bufferSize:         1024,\n    print:              void 0,\n    history:            true,\n    cd:                 false,\n    phContent:          void 0,\n    preCheck:           void 0\n    /* eslint-enable key-spacing */\n  },\n\n  fdR = 'none',\n  isRawMode = false,\n  salt = 0,\n  lastInput = '',\n  inputHistory = [],\n  _DBG_useExt = false,\n  _DBG_checkOptions = false,\n  _DBG_checkMethod = false,\n  fdW, ttyR, extHostPath, extHostArgs, tempdir, rawInput;\n\nfunction getHostArgs(options) {\n  // Send any text to crazy Windows shell safely.\n  function encodeArg(arg) {\n    return arg.replace(/[^\\w\\u0080-\\uFFFF]/g, function(chr) {\n      return '#' + chr.charCodeAt(0) + ';';\n    });\n  }\n\n  return extHostArgs.concat((function(conf) {\n    var args = [];\n    Object.keys(conf).forEach(function(optionName) {\n      if (conf[optionName] === 'boolean') {\n        if (options[optionName]) { args.push('--' + optionName); }\n      } else if (conf[optionName] === 'string') {\n        if (options[optionName]) {\n          args.push('--' + optionName, encodeArg(options[optionName]));\n        }\n      }\n    });\n    return args;\n  })({\n    /* eslint-disable key-spacing */\n    display:        'string',\n    displayOnly:    'boolean',\n    keyIn:          'boolean',\n    hideEchoBack:   'boolean',\n    mask:           'string',\n    limit:          'string',\n    caseSensitive:  'boolean'\n    /* eslint-enable key-spacing */\n  }));\n}\n\n// piping via files (for Node.js v0.10-)\nfunction _execFileSync(options, execOptions) {\n\n  function getTempfile(name) {\n    var suffix = '',\n      filepath, fd;\n    tempdir = tempdir || require('os').tmpdir();\n\n    while (true) {\n      filepath = pathUtil.join(tempdir, name + suffix);\n      try {\n        fd = fs.openSync(filepath, 'wx');\n      } catch (e) {\n        if (e.code === 'EEXIST') {\n          suffix++;\n          continue;\n        } else {\n          throw e;\n        }\n      }\n      fs.closeSync(fd);\n      break;\n    }\n    return filepath;\n  }\n\n  var res = {},\n    pathStdout = getTempfile('readline-sync.stdout'),\n    pathStderr = getTempfile('readline-sync.stderr'),\n    pathExit = getTempfile('readline-sync.exit'),\n    pathDone = getTempfile('readline-sync.done'),\n    crypto = require('crypto'),\n    hostArgs, shellPath, shellArgs, exitCode, extMessage, shasum, decipher, password;\n\n  shasum = crypto.createHash(ALGORITHM_HASH);\n  shasum.update('' + process.pid + (salt++) + Math.random());\n  password = shasum.digest('hex');\n  decipher = crypto.createDecipher(ALGORITHM_CIPHER, password);\n\n  hostArgs = getHostArgs(options);\n  if (IS_WIN) {\n    shellPath = process.env.ComSpec || 'cmd.exe';\n    process.env.Q = '\"'; // The quote (\") that isn't escaped.\n    // `()` for ignore space by echo\n    shellArgs = ['/V:ON', '/S', '/C',\n      '(%Q%' + shellPath + '%Q% /V:ON /S /C %Q%' + /* ESLint bug? */ // eslint-disable-line no-path-concat\n        '%Q%' + extHostPath + '%Q%' +\n          hostArgs.map(function(arg) { return ' %Q%' + arg + '%Q%'; }).join('') +\n        ' & (echo !ERRORLEVEL!)>%Q%' + pathExit + '%Q%%Q%) 2>%Q%' + pathStderr + '%Q%' +\n      ' |%Q%' + process.execPath + '%Q% %Q%' + __dirname + '\\\\encrypt.js%Q%' +\n        ' %Q%' + ALGORITHM_CIPHER + '%Q% %Q%' + password + '%Q%' +\n        ' >%Q%' + pathStdout + '%Q%' +\n      ' & (echo 1)>%Q%' + pathDone + '%Q%'];\n  } else {\n    shellPath = '/bin/sh';\n    shellArgs = ['-c',\n      // Use `()`, not `{}` for `-c` (text param)\n      '(\"' + extHostPath + '\"' + /* ESLint bug? */ // eslint-disable-line no-path-concat\n          hostArgs.map(function(arg) { return \" '\" + arg.replace(/'/g, \"'\\\\''\") + \"'\"; }).join('') +\n        '; echo $?>\"' + pathExit + '\") 2>\"' + pathStderr + '\"' +\n      ' |\"' + process.execPath + '\" \"' + __dirname + '/encrypt.js\"' +\n        ' \"' + ALGORITHM_CIPHER + '\" \"' + password + '\"' +\n        ' >\"' + pathStdout + '\"' +\n      '; echo 1 >\"' + pathDone + '\"'];\n  }\n  if (_DBG_checkMethod) { _DBG_checkMethod('_execFileSync', hostArgs); }\n  try {\n    childProc.spawn(shellPath, shellArgs, execOptions);\n  } catch (e) {\n    res.error = new Error(e.message);\n    res.error.method = '_execFileSync - spawn';\n    res.error.program = shellPath;\n    res.error.args = shellArgs;\n  }\n\n  while (fs.readFileSync(pathDone, {encoding: options.encoding}).trim() !== '1') {} // eslint-disable-line no-empty\n  if ((exitCode =\n      fs.readFileSync(pathExit, {encoding: options.encoding}).trim()) === '0') {\n    res.input =\n      decipher.update(fs.readFileSync(pathStdout, {encoding: 'binary'}),\n        'hex', options.encoding) +\n      decipher.final(options.encoding);\n  } else {\n    extMessage = fs.readFileSync(pathStderr, {encoding: options.encoding}).trim();\n    res.error = new Error(DEFAULT_ERR_MSG + (extMessage ? '\\n' + extMessage : ''));\n    res.error.method = '_execFileSync';\n    res.error.program = shellPath;\n    res.error.args = shellArgs;\n    res.error.extMessage = extMessage;\n    res.error.exitCode = +exitCode;\n  }\n\n  fs.unlinkSync(pathStdout);\n  fs.unlinkSync(pathStderr);\n  fs.unlinkSync(pathExit);\n  fs.unlinkSync(pathDone);\n\n  return res;\n}\n\nfunction readlineExt(options) {\n  var res = {},\n    execOptions = {env: process.env, encoding: options.encoding},\n    hostArgs, extMessage;\n\n  if (!extHostPath) {\n    if (IS_WIN) {\n      if (process.env.PSModulePath) { // Windows PowerShell\n        extHostPath = 'powershell.exe';\n        extHostArgs = ['-ExecutionPolicy', 'Bypass',\n          '-File', __dirname + '\\\\read.ps1']; // eslint-disable-line no-path-concat\n      } else { // Windows Script Host\n        extHostPath = 'cscript.exe';\n        extHostArgs = ['//nologo', __dirname + '\\\\read.cs.js']; // eslint-disable-line no-path-concat\n      }\n    } else {\n      extHostPath = '/bin/sh';\n      extHostArgs = [__dirname + '/read.sh']; // eslint-disable-line no-path-concat\n    }\n  }\n  if (IS_WIN && !process.env.PSModulePath) { // Windows Script Host\n    // ScriptPW (Win XP and Server2003) needs TTY stream as STDIN.\n    // In this case, If STDIN isn't TTY, an error is thrown.\n    execOptions.stdio = [process.stdin];\n  }\n\n  if (childProc.execFileSync) {\n    hostArgs = getHostArgs(options);\n    if (_DBG_checkMethod) { _DBG_checkMethod('execFileSync', hostArgs); }\n    try {\n      res.input = childProc.execFileSync(extHostPath, hostArgs, execOptions);\n    } catch (e) { // non-zero exit code\n      extMessage = e.stderr ? (e.stderr + '').trim() : '';\n      res.error = new Error(DEFAULT_ERR_MSG + (extMessage ? '\\n' + extMessage : ''));\n      res.error.method = 'execFileSync';\n      res.error.program = extHostPath;\n      res.error.args = hostArgs;\n      res.error.extMessage = extMessage;\n      res.error.exitCode = e.status;\n      res.error.code = e.code;\n      res.error.signal = e.signal;\n    }\n  } else {\n    res = _execFileSync(options, execOptions);\n  }\n  if (!res.error) {\n    res.input = res.input.replace(/^\\s*'|'\\s*$/g, '');\n    options.display = '';\n  }\n\n  return res;\n}\n\n/*\n  display:            string\n  displayOnly:        boolean\n  keyIn:              boolean\n  hideEchoBack:       boolean\n  mask:               string\n  limit:              string (pattern)\n  caseSensitive:      boolean\n  keepWhitespace:     boolean\n  encoding, bufferSize, print\n*/\nfunction _readlineSync(options) {\n  var input = '',\n    displaySave = options.display,\n    silent = !options.display && options.keyIn && options.hideEchoBack && !options.mask;\n\n  function tryExt() {\n    var res = readlineExt(options);\n    if (res.error) { throw res.error; }\n    return res.input;\n  }\n\n  if (_DBG_checkOptions) { _DBG_checkOptions(options); }\n\n  (function() { // open TTY\n    var fsB, constants, verNum;\n\n    function getFsB() {\n      if (!fsB) {\n        fsB = process.binding('fs'); // For raw device path\n        constants = process.binding('constants');\n        // for v6.3.0+\n        constants = constants && constants.fs && typeof constants.fs.O_RDWR === 'number'\n          ? constants.fs : constants;\n      }\n      return fsB;\n    }\n\n    if (typeof fdR !== 'string') { return; }\n    fdR = null;\n\n    if (IS_WIN) {\n      // iojs-v2.3.2+ input stream can't read first line. (#18)\n      // ** Don't get process.stdin before check! **\n      // Fixed v5.1.0\n      // Fixed v4.2.4\n      // It regressed again in v5.6.0, it is fixed in v6.2.0.\n      verNum = (function(ver) { // getVerNum\n        var nums = ver.replace(/^\\D+/, '').split('.');\n        var verNum = 0;\n        if ((nums[0] = +nums[0])) { verNum += nums[0] * 10000; }\n        if ((nums[1] = +nums[1])) { verNum += nums[1] * 100; }\n        if ((nums[2] = +nums[2])) { verNum += nums[2]; }\n        return verNum;\n      })(process.version);\n      if (!(verNum >= 20302 && verNum < 40204 || verNum >= 50000 && verNum < 50100 || verNum >= 50600 && verNum < 60200) &&\n          process.stdin.isTTY) {\n        process.stdin.pause();\n        fdR = process.stdin.fd;\n        ttyR = process.stdin._handle;\n      } else {\n        try {\n          // The stream by fs.openSync('\\\\\\\\.\\\\CON', 'r') can't switch to raw mode.\n          // 'CONIN$' might fail on XP, 2000, 7 (x86).\n          fdR = getFsB().open('CONIN$', constants.O_RDWR, parseInt('0666', 8));\n          ttyR = new TTY(fdR, true);\n        } catch (e) { /* ignore */ }\n      }\n\n      if (process.stdout.isTTY) {\n        fdW = process.stdout.fd;\n      } else {\n        try {\n          fdW = fs.openSync('\\\\\\\\.\\\\CON', 'w');\n        } catch (e) { /* ignore */ }\n        if (typeof fdW !== 'number') { // Retry\n          try {\n            fdW = getFsB().open('CONOUT$', constants.O_RDWR, parseInt('0666', 8));\n          } catch (e) { /* ignore */ }\n        }\n      }\n\n    } else {\n      if (process.stdin.isTTY) {\n        process.stdin.pause();\n        try {\n          fdR = fs.openSync('/dev/tty', 'r'); // device file, not process.stdin\n          ttyR = process.stdin._handle;\n        } catch (e) { /* ignore */ }\n      } else {\n        // Node.js v0.12 read() fails.\n        try {\n          fdR = fs.openSync('/dev/tty', 'r');\n          ttyR = new TTY(fdR, false);\n        } catch (e) { /* ignore */ }\n      }\n\n      if (process.stdout.isTTY) {\n        fdW = process.stdout.fd;\n      } else {\n        try {\n          fdW = fs.openSync('/dev/tty', 'w');\n        } catch (e) { /* ignore */ }\n      }\n    }\n  })();\n\n  (function() { // try read\n    var isCooked = !options.hideEchoBack && !options.keyIn,\n      atEol, limit, buffer, reqSize, readSize, chunk, line;\n    rawInput = '';\n\n    // Node.js v0.10- returns an error if same mode is set.\n    function setRawMode(mode) {\n      if (mode === isRawMode) { return true; }\n      if (ttyR.setRawMode(mode) !== 0) { return false; }\n      isRawMode = mode;\n      return true;\n    }\n\n    if (_DBG_useExt || !ttyR ||\n        typeof fdW !== 'number' && (options.display || !isCooked)) {\n      input = tryExt();\n      return;\n    }\n\n    if (options.display) {\n      fs.writeSync(fdW, options.display);\n      options.display = '';\n    }\n    if (options.displayOnly) { return; }\n\n    if (!setRawMode(!isCooked)) {\n      input = tryExt();\n      return;\n    }\n\n    reqSize = options.keyIn ? 1 : options.bufferSize;\n    // Check `allocUnsafe` to make sure of the new API.\n    buffer = Buffer.allocUnsafe && Buffer.alloc ? Buffer.alloc(reqSize) : new Buffer(reqSize);\n\n    if (options.keyIn && options.limit) {\n      limit = new RegExp('[^' + options.limit + ']',\n        'g' + (options.caseSensitive ? '' : 'i'));\n    }\n\n    while (true) {\n      readSize = 0;\n      try {\n        readSize = fs.readSync(fdR, buffer, 0, reqSize);\n      } catch (e) {\n        if (e.code !== 'EOF') {\n          setRawMode(false);\n          input += tryExt();\n          return;\n        }\n      }\n      if (readSize > 0) {\n        chunk = buffer.toString(options.encoding, 0, readSize);\n        rawInput += chunk;\n      } else {\n        chunk = '\\n';\n        rawInput += String.fromCharCode(0);\n      }\n\n      if (chunk && typeof (line = (chunk.match(/^(.*?)[\\r\\n]/) || [])[1]) === 'string') {\n        chunk = line;\n        atEol = true;\n      }\n\n      // other ctrl-chars\n      // eslint-disable-next-line no-control-regex\n      if (chunk) { chunk = chunk.replace(/[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]/g, ''); }\n      if (chunk && limit) { chunk = chunk.replace(limit, ''); }\n\n      if (chunk) {\n        if (!isCooked) {\n          if (!options.hideEchoBack) {\n            fs.writeSync(fdW, chunk);\n          } else if (options.mask) {\n            fs.writeSync(fdW, (new Array(chunk.length + 1)).join(options.mask));\n          }\n        }\n        input += chunk;\n      }\n\n      if (!options.keyIn && atEol ||\n        options.keyIn && input.length >= reqSize) { break; }\n    }\n\n    if (!isCooked && !silent) { fs.writeSync(fdW, '\\n'); }\n    setRawMode(false);\n  })();\n\n  if (options.print && !silent) {\n    options.print(\n      displaySave + (\n        options.displayOnly ? '' : (\n          options.hideEchoBack ? (new Array(input.length + 1)).join(options.mask) : input\n        ) + '\\n' // must at least write '\\n'\n      ),\n      options.encoding);\n  }\n\n  return options.displayOnly ? '' :\n    (lastInput = options.keepWhitespace || options.keyIn ? input : input.trim());\n}\n\nfunction flattenArray(array, validator) {\n  var flatArray = [];\n  function _flattenArray(array) {\n    if (array == null) { return; }\n    if (Array.isArray(array)) {\n      array.forEach(_flattenArray);\n    } else if (!validator || validator(array)) {\n      flatArray.push(array);\n    }\n  }\n  _flattenArray(array);\n  return flatArray;\n}\n\nfunction escapePattern(pattern) {\n  return pattern.replace(/[\\x00-\\x7f]/g, // eslint-disable-line no-control-regex\n    function(s) { return '\\\\x' + ('00' + s.charCodeAt().toString(16)).substr(-2); });\n}\n\n// margeOptions(options1, options2 ... )\n// margeOptions(true, options1, options2 ... )\n//    arg1=true : Start from defaultOptions and pick elements of that.\nfunction margeOptions() {\n  var optionsList = Array.prototype.slice.call(arguments),\n    optionNames, fromDefault;\n\n  if (optionsList.length && typeof optionsList[0] === 'boolean') {\n    fromDefault = optionsList.shift();\n    if (fromDefault) {\n      optionNames = Object.keys(defaultOptions);\n      optionsList.unshift(defaultOptions);\n    }\n  }\n\n  return optionsList.reduce(function(options, optionsPart) {\n    if (optionsPart == null) { return options; }\n\n    // ======== DEPRECATED ========\n    if (optionsPart.hasOwnProperty('noEchoBack') &&\n        !optionsPart.hasOwnProperty('hideEchoBack')) {\n      optionsPart.hideEchoBack = optionsPart.noEchoBack;\n      delete optionsPart.noEchoBack;\n    }\n    if (optionsPart.hasOwnProperty('noTrim') &&\n        !optionsPart.hasOwnProperty('keepWhitespace')) {\n      optionsPart.keepWhitespace = optionsPart.noTrim;\n      delete optionsPart.noTrim;\n    }\n    // ======== /DEPRECATED ========\n\n    if (!fromDefault) { optionNames = Object.keys(optionsPart); }\n    optionNames.forEach(function(optionName) {\n      var value;\n      if (!optionsPart.hasOwnProperty(optionName)) { return; }\n      value = optionsPart[optionName];\n      /* eslint-disable no-multi-spaces */\n      switch (optionName) {\n        //                    _readlineSync <- *    * -> defaultOptions\n        // ================ string\n        case 'mask':                        // *    *\n        case 'limitMessage':                //      *\n        case 'defaultInput':                //      *\n        case 'encoding':                    // *    *\n          value = value != null ? value + '' : '';\n          if (value && optionName !== 'limitMessage') { value = value.replace(/[\\r\\n]/g, ''); }\n          options[optionName] = value;\n          break;\n        // ================ number(int)\n        case 'bufferSize':                  // *    *\n          if (!isNaN(value = parseInt(value, 10)) && typeof value === 'number') {\n            options[optionName] = value; // limited updating (number is needed)\n          }\n          break;\n        // ================ boolean\n        case 'displayOnly':                 // *\n        case 'keyIn':                       // *\n        case 'hideEchoBack':                // *    *\n        case 'caseSensitive':               // *    *\n        case 'keepWhitespace':              // *    *\n        case 'history':                     //      *\n        case 'cd':                          //      *\n          options[optionName] = !!value;\n          break;\n        // ================ array\n        case 'limit':                       // *    *     to string for readlineExt\n        case 'trueValue':                   //      *\n        case 'falseValue':                  //      *\n          options[optionName] = flattenArray(value, function(value) {\n            var type = typeof value;\n            return type === 'string' || type === 'number' ||\n              type === 'function' || value instanceof RegExp;\n          }).map(function(value) {\n            return typeof value === 'string' ? value.replace(/[\\r\\n]/g, '') : value;\n          });\n          break;\n        // ================ function\n        case 'print':                       // *    *\n        case 'phContent':                   //      *\n        case 'preCheck':                    //      *\n          options[optionName] = typeof value === 'function' ? value : void 0;\n          break;\n        // ================ other\n        case 'prompt':                      //      *\n        case 'display':                     // *\n          options[optionName] = value != null ? value : '';\n          break;\n        // no default\n      }\n      /* eslint-enable no-multi-spaces */\n    });\n    return options;\n  }, {});\n}\n\nfunction isMatched(res, comps, caseSensitive) {\n  return comps.some(function(comp) {\n    var type = typeof comp;\n    return type === 'string'\n      ? (caseSensitive ? res === comp : res.toLowerCase() === comp.toLowerCase()) :\n      type === 'number' ? parseFloat(res) === comp :\n      type === 'function' ? comp(res) :\n      comp instanceof RegExp ? comp.test(res) : false;\n  });\n}\n\nfunction replaceHomePath(path, expand) {\n  var homePath = pathUtil.normalize(\n    IS_WIN ? (process.env.HOMEDRIVE || '') + (process.env.HOMEPATH || '') :\n    process.env.HOME || '').replace(/[/\\\\]+$/, '');\n  path = pathUtil.normalize(path);\n  return expand ? path.replace(/^~(?=\\/|\\\\|$)/, homePath) :\n    path.replace(new RegExp('^' + escapePattern(homePath) +\n      '(?=\\\\/|\\\\\\\\|$)', IS_WIN ? 'i' : ''), '~');\n}\n\nfunction replacePlaceholder(text, generator) {\n  var PTN_INNER = '(?:\\\\(([\\\\s\\\\S]*?)\\\\))?(\\\\w+|.-.)(?:\\\\(([\\\\s\\\\S]*?)\\\\))?',\n    rePlaceholder = new RegExp('(\\\\$)?(\\\\$<' + PTN_INNER + '>)', 'g'),\n    rePlaceholderCompat = new RegExp('(\\\\$)?(\\\\$\\\\{' + PTN_INNER + '\\\\})', 'g');\n\n  function getPlaceholderText(s, escape, placeholder, pre, param, post) {\n    var text;\n    return escape || typeof (text = generator(param)) !== 'string' ? placeholder :\n      text ? (pre || '') + text + (post || '') : '';\n  }\n\n  return text.replace(rePlaceholder, getPlaceholderText)\n    .replace(rePlaceholderCompat, getPlaceholderText);\n}\n\nfunction array2charlist(array, caseSensitive, collectSymbols) {\n  var group = [],\n    groupClass = -1,\n    charCode = 0,\n    symbols = '',\n    values, suppressed;\n  function addGroup(groups, group) {\n    if (group.length > 3) { // ellipsis\n      groups.push(group[0] + '...' + group[group.length - 1]);\n      suppressed = true;\n    } else if (group.length) {\n      groups = groups.concat(group);\n    }\n    return groups;\n  }\n\n  values = array.reduce(function(chars, value) {\n    return chars.concat((value + '').split(''));\n  }, []).reduce(function(groups, curChar) {\n    var curGroupClass, curCharCode;\n    if (!caseSensitive) { curChar = curChar.toLowerCase(); }\n    curGroupClass = /^\\d$/.test(curChar) ? 1 :\n      /^[A-Z]$/.test(curChar) ? 2 : /^[a-z]$/.test(curChar) ? 3 : 0;\n    if (collectSymbols && curGroupClass === 0) {\n      symbols += curChar;\n    } else {\n      curCharCode = curChar.charCodeAt(0);\n      if (curGroupClass && curGroupClass === groupClass &&\n          curCharCode === charCode + 1) {\n        group.push(curChar);\n      } else {\n        groups = addGroup(groups, group);\n        group = [curChar];\n        groupClass = curGroupClass;\n      }\n      charCode = curCharCode;\n    }\n    return groups;\n  }, []);\n  values = addGroup(values, group); // last group\n  if (symbols) { values.push(symbols); suppressed = true; }\n  return {values: values, suppressed: suppressed};\n}\n\nfunction joinChunks(chunks, suppressed) {\n  return chunks.join(chunks.length > 2 ? ', ' : suppressed ? ' / ' : '/');\n}\n\nfunction getPhContent(param, options) {\n  var resCharlist = {},\n    text, values, arg;\n  if (options.phContent) {\n    text = options.phContent(param, options);\n  }\n  if (typeof text !== 'string') {\n    switch (param) {\n      case 'hideEchoBack':\n      case 'mask':\n      case 'defaultInput':\n      case 'caseSensitive':\n      case 'keepWhitespace':\n      case 'encoding':\n      case 'bufferSize':\n      case 'history':\n      case 'cd':\n        text = !options.hasOwnProperty(param) ? '' :\n          typeof options[param] === 'boolean' ? (options[param] ? 'on' : 'off') :\n          options[param] + '';\n        break;\n      // case 'prompt':\n      // case 'query':\n      // case 'display':\n      //   text = options.hasOwnProperty('displaySrc') ? options.displaySrc + '' : '';\n      //   break;\n      case 'limit':\n      case 'trueValue':\n      case 'falseValue':\n        values = options[options.hasOwnProperty(param + 'Src') ? param + 'Src' : param];\n        if (options.keyIn) { // suppress\n          resCharlist = array2charlist(values, options.caseSensitive);\n          values = resCharlist.values;\n        } else {\n          values = values.filter(function(value) {\n            var type = typeof value;\n            return type === 'string' || type === 'number';\n          });\n        }\n        text = joinChunks(values, resCharlist.suppressed);\n        break;\n      case 'limitCount':\n      case 'limitCountNotZero':\n        text = options[options.hasOwnProperty('limitSrc') ? 'limitSrc' : 'limit'].length;\n        text = text || param !== 'limitCountNotZero' ? text + '' : '';\n        break;\n      case 'lastInput':\n        text = lastInput;\n        break;\n      case 'cwd':\n      case 'CWD':\n      case 'cwdHome':\n        text = process.cwd();\n        if (param === 'CWD') {\n          text = pathUtil.basename(text);\n        } else if (param === 'cwdHome') {\n          text = replaceHomePath(text);\n        }\n        break;\n      case 'date':\n      case 'time':\n      case 'localeDate':\n      case 'localeTime':\n        text = (new Date())['to' +\n          param.replace(/^./, function(str) { return str.toUpperCase(); }) +\n          'String']();\n        break;\n      default: // with arg\n        if (typeof (arg = (param.match(/^history_m(\\d+)$/) || [])[1]) === 'string') {\n          text = inputHistory[inputHistory.length - arg] || '';\n        }\n    }\n  }\n  return text;\n}\n\nfunction getPhCharlist(param) {\n  var matches = /^(.)-(.)$/.exec(param),\n    text = '',\n    from, to, code, step;\n  if (!matches) { return null; }\n  from = matches[1].charCodeAt(0);\n  to = matches[2].charCodeAt(0);\n  step = from < to ? 1 : -1;\n  for (code = from; code !== to + step; code += step) { text += String.fromCharCode(code); }\n  return text;\n}\n\n// cmd \"arg\" \" a r g \" \"\" 'a\"r\"g' \"a\"\"rg\" \"arg\nfunction parseCl(cl) {\n  var reToken = new RegExp(/(\\s*)(?:(\"|')(.*?)(?:\\2|$)|(\\S+))/g),\n    taken = '',\n    args = [],\n    matches, part;\n  cl = cl.trim();\n  while ((matches = reToken.exec(cl))) {\n    part = matches[3] || matches[4] || '';\n    if (matches[1]) {\n      args.push(taken);\n      taken = '';\n    }\n    taken += part;\n  }\n  if (taken) { args.push(taken); }\n  return args;\n}\n\nfunction toBool(res, options) {\n  return (\n    (options.trueValue.length &&\n      isMatched(res, options.trueValue, options.caseSensitive)) ? true :\n    (options.falseValue.length &&\n      isMatched(res, options.falseValue, options.caseSensitive)) ? false : res);\n}\n\nfunction getValidLine(options) {\n  var res, forceNext, limitMessage,\n    matches, histInput, args, resCheck;\n\n  function _getPhContent(param) { return getPhContent(param, options); }\n  function addDisplay(text) { options.display += (/[^\\r\\n]$/.test(options.display) ? '\\n' : '') + text; }\n\n  options.limitSrc = options.limit;\n  options.displaySrc = options.display;\n  options.limit = ''; // for readlineExt\n  options.display = replacePlaceholder(options.display + '', _getPhContent);\n\n  while (true) {\n    res = _readlineSync(options);\n    forceNext = false;\n    limitMessage = '';\n\n    if (options.defaultInput && !res) { res = options.defaultInput; }\n\n    if (options.history) {\n      if ((matches = /^\\s*!(?:!|-1)(:p)?\\s*$/.exec(res))) { // `!!` `!-1` +`:p`\n        histInput = inputHistory[0] || '';\n        if (matches[1]) { // only display\n          forceNext = true;\n        } else { // replace input\n          res = histInput;\n        }\n        // Show it even if it is empty (NL only).\n        addDisplay(histInput + '\\n');\n        if (!forceNext) { // Loop may break\n          options.displayOnly = true;\n          _readlineSync(options);\n          options.displayOnly = false;\n        }\n      } else if (res && res !== inputHistory[inputHistory.length - 1]) {\n        inputHistory = [res];\n      }\n    }\n\n    if (!forceNext && options.cd && res) {\n      args = parseCl(res);\n      switch (args[0].toLowerCase()) {\n        case 'cd':\n          if (args[1]) {\n            try {\n              process.chdir(replaceHomePath(args[1], true));\n            } catch (e) {\n              addDisplay(e + '');\n            }\n          }\n          forceNext = true;\n          break;\n        case 'pwd':\n          addDisplay(process.cwd());\n          forceNext = true;\n          break;\n        // no default\n      }\n    }\n\n    if (!forceNext && options.preCheck) {\n      resCheck = options.preCheck(res, options);\n      res = resCheck.res;\n      if (resCheck.forceNext) { forceNext = true; } // Don't switch to false.\n    }\n\n    if (!forceNext) {\n      if (!options.limitSrc.length ||\n        isMatched(res, options.limitSrc, options.caseSensitive)) { break; }\n      if (options.limitMessage) {\n        limitMessage = replacePlaceholder(options.limitMessage, _getPhContent);\n      }\n    }\n\n    addDisplay((limitMessage ? limitMessage + '\\n' : '') +\n      replacePlaceholder(options.displaySrc + '', _getPhContent));\n  }\n  return toBool(res, options);\n}\n\n// for dev\nexports._DBG_set_useExt = function(val) { _DBG_useExt = val; };\nexports._DBG_set_checkOptions = function(val) { _DBG_checkOptions = val; };\nexports._DBG_set_checkMethod = function(val) { _DBG_checkMethod = val; };\nexports._DBG_clearHistory = function() { lastInput = ''; inputHistory = []; };\n\n// ------------------------------------\n\nexports.setDefaultOptions = function(options) {\n  defaultOptions = margeOptions(true, options);\n  return margeOptions(true); // copy\n};\n\nexports.question = function(query, options) {\n  /* eslint-disable key-spacing */\n  return getValidLine(margeOptions(margeOptions(true, options), {\n    display:            query\n  }));\n  /* eslint-enable key-spacing */\n};\n\nexports.prompt = function(options) {\n  var readOptions = margeOptions(true, options);\n  readOptions.display = readOptions.prompt;\n  return getValidLine(readOptions);\n};\n\nexports.keyIn = function(query, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions(margeOptions(true, options), {\n    display:            query,\n    keyIn:              true,\n    keepWhitespace:     true\n  });\n  /* eslint-enable key-spacing */\n\n  // char list\n  readOptions.limitSrc = readOptions.limit.filter(function(value) {\n    var type = typeof value;\n    return type === 'string' || type === 'number';\n  }).map(function(text) {\n    return replacePlaceholder(text + '', getPhCharlist);\n  });\n  // pattern\n  readOptions.limit = escapePattern(readOptions.limitSrc.join(''));\n\n  ['trueValue', 'falseValue'].forEach(function(optionName) {\n    readOptions[optionName] = readOptions[optionName].reduce(function(comps, comp) {\n      var type = typeof comp;\n      if (type === 'string' || type === 'number') {\n        comps = comps.concat((comp + '').split(''));\n      } else { comps.push(comp); }\n      return comps;\n    }, []);\n  });\n\n  readOptions.display = replacePlaceholder(readOptions.display + '',\n    function(param) { return getPhContent(param, readOptions); });\n\n  return toBool(_readlineSync(readOptions), readOptions);\n};\n\n// ------------------------------------\n\nexports.questionEMail = function(query, options) {\n  if (query == null) { query = 'Input e-mail address: '; }\n  /* eslint-disable key-spacing */\n  return exports.question(query, margeOptions({\n    // -------- default\n    hideEchoBack:       false,\n    // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n    limit:              /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n    limitMessage:       'Input valid e-mail address, please.',\n    trueValue:          null,\n    falseValue:         null\n  }, options, {\n    // -------- forced\n    keepWhitespace:     false,\n    cd:                 false\n  }));\n  /* eslint-enable key-spacing */\n};\n\nexports.questionNewPassword = function(query, options) {\n  /* eslint-disable key-spacing */\n  var resCharlist, min, max,\n    readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       true,\n      mask:               '*',\n      limitMessage:       'It can include: $<charlist>\\n' +\n                            'And the length must be: $<length>',\n      trueValue:          null,\n      falseValue:         null,\n      caseSensitive:      true\n    }, options, {\n      // -------- forced\n      history:            false,\n      cd:                 false,\n      // limit (by charlist etc.),\n      phContent: function(param) {\n        return param === 'charlist' ? resCharlist.text :\n          param === 'length' ? min + '...' + max : null;\n      }\n    }),\n    // added:     charlist, min, max, confirmMessage, unmatchMessage\n    charlist, confirmMessage, unmatchMessage,\n    limit, limitMessage, res1, res2;\n  /* eslint-enable key-spacing */\n  options = options || {};\n\n  charlist = replacePlaceholder(\n    options.charlist ? options.charlist + '' : '$<!-~>', getPhCharlist);\n  if (isNaN(min = parseInt(options.min, 10)) || typeof min !== 'number') { min = 12; }\n  if (isNaN(max = parseInt(options.max, 10)) || typeof max !== 'number') { max = 24; }\n  limit = new RegExp('^[' + escapePattern(charlist) +\n    ']{' + min + ',' + max + '}$');\n  resCharlist = array2charlist([charlist], readOptions.caseSensitive, true);\n  resCharlist.text = joinChunks(resCharlist.values, resCharlist.suppressed);\n\n  confirmMessage = options.confirmMessage != null ? options.confirmMessage :\n    'Reinput a same one to confirm it: ';\n  unmatchMessage = options.unmatchMessage != null ? options.unmatchMessage :\n    'It differs from first one.' +\n      ' Hit only the Enter key if you want to retry from first one.';\n\n  if (query == null) { query = 'Input new password: '; }\n\n  limitMessage = readOptions.limitMessage;\n  while (!res2) {\n    readOptions.limit = limit;\n    readOptions.limitMessage = limitMessage;\n    res1 = exports.question(query, readOptions);\n\n    readOptions.limit = [res1, ''];\n    readOptions.limitMessage = unmatchMessage;\n    res2 = exports.question(confirmMessage, readOptions);\n  }\n\n  return res1;\n};\n\nfunction _questionNum(query, options, parser) {\n  var validValue;\n  function getValidValue(value) {\n    validValue = parser(value);\n    return !isNaN(validValue) && typeof validValue === 'number';\n  }\n  /* eslint-disable key-spacing */\n  exports.question(query, margeOptions({\n    // -------- default\n    limitMessage:       'Input valid number, please.'\n  }, options, {\n    // -------- forced\n    limit:              getValidValue,\n    cd:                 false\n    // trueValue, falseValue, caseSensitive, keepWhitespace don't work.\n  }));\n  /* eslint-enable key-spacing */\n  return validValue;\n}\nexports.questionInt = function(query, options) {\n  return _questionNum(query, options, function(value) { return parseInt(value, 10); });\n};\nexports.questionFloat = function(query, options) {\n  return _questionNum(query, options, parseFloat);\n};\n\nexports.questionPath = function(query, options) {\n  /* eslint-disable key-spacing */\n  var error = '',\n    validPath, // before readOptions\n    readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false,\n      limitMessage:       '$<error(\\n)>Input valid path, please.' +\n                            '$<( Min:)min>$<( Max:)max>',\n      history:            true,\n      cd:                 true\n    }, options, {\n      // -------- forced\n      keepWhitespace:     false,\n      limit: function(value) {\n        var exists, stat, res;\n        value = replaceHomePath(value, true);\n        error = ''; // for validate\n        // mkdir -p\n        function mkdirParents(dirPath) {\n          dirPath.split(/\\/|\\\\/).reduce(function(parents, dir) {\n            var path = pathUtil.resolve((parents += dir + pathUtil.sep));\n            if (!fs.existsSync(path)) {\n              fs.mkdirSync(path);\n            } else if (!fs.statSync(path).isDirectory()) {\n              throw new Error('Non directory already exists: ' + path);\n            }\n            return parents;\n          }, '');\n        }\n\n        try {\n          exists = fs.existsSync(value);\n          validPath = exists ? fs.realpathSync(value) : pathUtil.resolve(value);\n          // options.exists default: true, not-bool: no-check\n          if (!options.hasOwnProperty('exists') && !exists ||\n              typeof options.exists === 'boolean' && options.exists !== exists) {\n            error = (exists ? 'Already exists' : 'No such file or directory') +\n              ': ' + validPath;\n            return false;\n          }\n          if (!exists && options.create) {\n            if (options.isDirectory) {\n              mkdirParents(validPath);\n            } else {\n              mkdirParents(pathUtil.dirname(validPath));\n              fs.closeSync(fs.openSync(validPath, 'w')); // touch\n            }\n            validPath = fs.realpathSync(validPath);\n          }\n          if (exists && (options.min || options.max ||\n              options.isFile || options.isDirectory)) {\n            stat = fs.statSync(validPath);\n            // type check first (directory has zero size)\n            if (options.isFile && !stat.isFile()) {\n              error = 'Not file: ' + validPath;\n              return false;\n            } else if (options.isDirectory && !stat.isDirectory()) {\n              error = 'Not directory: ' + validPath;\n              return false;\n            } else if (options.min && stat.size < +options.min ||\n                options.max && stat.size > +options.max) {\n              error = 'Size ' + stat.size + ' is out of range: ' + validPath;\n              return false;\n            }\n          }\n          if (typeof options.validate === 'function' &&\n              (res = options.validate(validPath)) !== true) {\n            if (typeof res === 'string') { error = res; }\n            return false;\n          }\n        } catch (e) {\n          error = e + '';\n          return false;\n        }\n        return true;\n      },\n      // trueValue, falseValue, caseSensitive don't work.\n      phContent: function(param) {\n        return param === 'error' ? error :\n          param !== 'min' && param !== 'max' ? null :\n          options.hasOwnProperty(param) ? options[param] + '' : '';\n      }\n    });\n    // added:     exists, create, min, max, isFile, isDirectory, validate\n  /* eslint-enable key-spacing */\n  options = options || {};\n\n  if (query == null) { query = 'Input path (you can \"cd\" and \"pwd\"): '; }\n\n  exports.question(query, readOptions);\n  return validPath;\n};\n\n// props: preCheck, args, hRes, limit\nfunction getClHandler(commandHandler, options) {\n  var clHandler = {},\n    hIndex = {};\n  if (typeof commandHandler === 'object') {\n    Object.keys(commandHandler).forEach(function(cmd) {\n      if (typeof commandHandler[cmd] === 'function') {\n        hIndex[options.caseSensitive ? cmd : cmd.toLowerCase()] = commandHandler[cmd];\n      }\n    });\n    clHandler.preCheck = function(res) {\n      var cmdKey;\n      clHandler.args = parseCl(res);\n      cmdKey = clHandler.args[0] || '';\n      if (!options.caseSensitive) { cmdKey = cmdKey.toLowerCase(); }\n      clHandler.hRes =\n        cmdKey !== '_' && hIndex.hasOwnProperty(cmdKey)\n          ? hIndex[cmdKey].apply(res, clHandler.args.slice(1)) :\n          hIndex.hasOwnProperty('_') ? hIndex._.apply(res, clHandler.args) : null;\n      return {res: res, forceNext: false};\n    };\n    if (!hIndex.hasOwnProperty('_')) {\n      clHandler.limit = function() { // It's called after preCheck.\n        var cmdKey = clHandler.args[0] || '';\n        if (!options.caseSensitive) { cmdKey = cmdKey.toLowerCase(); }\n        return hIndex.hasOwnProperty(cmdKey);\n      };\n    }\n  } else {\n    clHandler.preCheck = function(res) {\n      clHandler.args = parseCl(res);\n      clHandler.hRes = typeof commandHandler === 'function'\n        ? commandHandler.apply(res, clHandler.args) : true; // true for break loop\n      return {res: res, forceNext: false};\n    };\n  }\n  return clHandler;\n}\n\nexports.promptCL = function(commandHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false,\n      limitMessage:       'Requested command is not available.',\n      caseSensitive:      false,\n      history:            true\n    }, options),\n    //   -------- forced\n    //   trueValue, falseValue, keepWhitespace don't work.\n    //   preCheck, limit (by clHandler)\n    clHandler = getClHandler(commandHandler, readOptions);\n  /* eslint-enable key-spacing */\n  readOptions.limit = clHandler.limit;\n  readOptions.preCheck = clHandler.preCheck;\n  exports.prompt(readOptions);\n  return clHandler.args;\n};\n\nexports.promptLoop = function(inputHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n    // -------- default\n    hideEchoBack:       false,\n    trueValue:          null,\n    falseValue:         null,\n    caseSensitive:      false,\n    history:            true\n  }, options);\n  /* eslint-enable key-spacing */\n  while (true) { if (inputHandler(exports.prompt(readOptions))) { break; } }\n  // return; // nothing is returned\n};\n\nexports.promptCLLoop = function(commandHandler, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false,\n      limitMessage:       'Requested command is not available.',\n      caseSensitive:      false,\n      history:            true\n    }, options),\n    //   -------- forced\n    //   trueValue, falseValue, keepWhitespace don't work.\n    //   preCheck, limit (by clHandler)\n    clHandler = getClHandler(commandHandler, readOptions);\n  /* eslint-enable key-spacing */\n  readOptions.limit = clHandler.limit;\n  readOptions.preCheck = clHandler.preCheck;\n  while (true) {\n    exports.prompt(readOptions);\n    if (clHandler.hRes) { break; }\n  }\n  // return; // nothing is returned\n};\n\nexports.promptSimShell = function(options) {\n  /* eslint-disable key-spacing */\n  return exports.prompt(margeOptions({\n    // -------- default\n    hideEchoBack:       false,\n    history:            true\n  }, options, {\n    // -------- forced\n    prompt:             (function() {\n      return IS_WIN ? '$<cwd>>' :\n        // 'user@host:cwd$ '\n        (process.env.USER || '') +\n        (process.env.HOSTNAME ? '@' + process.env.HOSTNAME.replace(/\\..*$/, '') : '') +\n        ':$<cwdHome>$ ';\n    })()\n  }));\n  /* eslint-enable key-spacing */\n};\n\nfunction _keyInYN(query, options, limit) {\n  var res;\n  if (query == null) { query = 'Are you sure? '; }\n  if ((!options || options.guide !== false) && (query += '')) {\n    query = query.replace(/\\s*:?\\s*$/, '') + ' [y/n]: ';\n  }\n  /* eslint-disable key-spacing */\n  res = exports.keyIn(query, margeOptions(options, {\n    // -------- forced\n    hideEchoBack:       false,\n    limit:              limit,\n    trueValue:          'y',\n    falseValue:         'n',\n    caseSensitive:      false\n    // mask doesn't work.\n  }));\n  // added:     guide\n  /* eslint-enable key-spacing */\n  return typeof res === 'boolean' ? res : '';\n}\nexports.keyInYN = function(query, options) { return _keyInYN(query, options); };\nexports.keyInYNStrict = function(query, options) { return _keyInYN(query, options, 'yn'); };\n\nexports.keyInPause = function(query, options) {\n  if (query == null) { query = 'Continue...'; }\n  if ((!options || options.guide !== false) && (query += '')) {\n    query = query.replace(/\\s+$/, '') + ' (Hit any key)';\n  }\n  /* eslint-disable key-spacing */\n  exports.keyIn(query, margeOptions({\n    // -------- default\n    limit:              null\n  }, options, {\n    // -------- forced\n    hideEchoBack:       true,\n    mask:               ''\n  }));\n  // added:     guide\n  /* eslint-enable key-spacing */\n  // return; // nothing is returned\n};\n\nexports.keyInSelect = function(items, query, options) {\n  /* eslint-disable key-spacing */\n  var readOptions = margeOptions({\n      // -------- default\n      hideEchoBack:       false\n    }, options, {\n      // -------- forced\n      trueValue:          null,\n      falseValue:         null,\n      caseSensitive:      false,\n      // limit (by items),\n      phContent: function(param) {\n        return param === 'itemsCount' ? items.length + '' :\n          param === 'firstItem' ? (items[0] + '').trim() :\n          param === 'lastItem' ? (items[items.length - 1] + '').trim() : null;\n      }\n    }),\n    // added:     guide, cancel\n    keylist = '',\n    key2i = {},\n    charCode = 49 /* '1' */,\n    display = '\\n';\n  /* eslint-enable key-spacing */\n  if (!Array.isArray(items) || !items.length || items.length > 35) {\n    throw '`items` must be Array (max length: 35).';\n  }\n\n  items.forEach(function(item, i) {\n    var key = String.fromCharCode(charCode);\n    keylist += key;\n    key2i[key] = i;\n    display += '[' + key + '] ' + (item + '').trim() + '\\n';\n    charCode = charCode === 57 /* '9' */ ? 97 /* 'a' */ : charCode + 1;\n  });\n  if (!options || options.cancel !== false) {\n    keylist += '0';\n    key2i['0'] = -1;\n    display += '[0] ' +\n      (options && options.cancel != null && typeof options.cancel !== 'boolean'\n        ? (options.cancel + '').trim() : 'CANCEL') + '\\n';\n  }\n  readOptions.limit = keylist;\n  display += '\\n';\n\n  if (query == null) { query = 'Choose one from list: '; }\n  if ((query += '')) {\n    if (!options || options.guide !== false) {\n      query = query.replace(/\\s*:?\\s*$/, '') + ' [$<limit>]: ';\n    }\n    display += query;\n  }\n\n  return key2i[exports.keyIn(display, readOptions).toLowerCase()];\n};\n\nexports.getRawInput = function() { return rawInput; };\n\n// ======== DEPRECATED ========\nfunction _setOption(optionName, args) {\n  var options;\n  if (args.length) { options = {}; options[optionName] = args[0]; }\n  return exports.setDefaultOptions(options)[optionName];\n}\nexports.setPrint = function() { return _setOption('print', arguments); };\nexports.setPrompt = function() { return _setOption('prompt', arguments); };\nexports.setEncoding = function() { return _setOption('encoding', arguments); };\nexports.setMask = function() { return _setOption('mask', arguments); };\nexports.setBufferSize = function() { return _setOption('bufferSize', arguments); };\n"],
  "mappings": "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",
  "names": ["verNum", "array", "value", "text", "group"]
}
